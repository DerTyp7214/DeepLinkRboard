name: Build CI

on:
  push:
    branches: [ master, develop ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  buildMaster:
    name: Build Ci APK from Master
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          submodules: recursive

      - uses: nttld/setup-ndk@v1.2.0
        with:
          ndk-version: r25b

      - name: Get Commit Message
        id: commitMessage
        run: IN="${{ github.event.head_commit.message }}" && echo "message=${IN%%$'\n'*}" >> $GITHUB_OUTPUT

      - name: Setup JDK
        uses: actions/setup-java@v3.6.0
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Gradle dependencies
        uses: actions/cache@v3.0.11
        if: ${{ false }}
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Cache build cache
        uses: actions/cache@v3.0.11
        with:
          path: |
            ${{ github.workspace }}/.ccache
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-build-cache-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-cache-

      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: File Permissions
        run: chmod +x gradlew

      - name: Accept Preview SDK License
        run: echo -n -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > /usr/local/lib/android/sdk/licenses/android-sdk-preview-license
        
      - name: Build apk
        id: buildAllApks
        uses: gradle/gradle-build-action@v2.3.3
        with:
          gradle-version: wrapper
          arguments: assembleRelease

      - name: Get JSON
        id: metadataJson
        run: |
          echo 'METADATA_JSON<<EOF' >> $GITHUB_ENV
          cat app/build/outputs/apk/debug/output-metadata.json >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Sign artifact
        id: signArtifact
        uses: ilharp/sign-android-release@v1.0.4
        with:
          releaseDir: app/build/outputs/apk/release
          keyAlias: ${{ secrets.KEYALIAS }}
          signingKey: ${{ secrets.SIGNING_KEY }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          buildToolsVersion: 33.0.1

      - name: Rename APK
        run: mv app/build/outputs/apk/release/app-release-unsigned-signed.apk app/build/outputs/apk/release/app-release.apk

      - name: Upload Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: Debug Artifact
          path: app/build/outputs/apk/release/app-release.apk

      - name: Create new Release
        if: steps.extract_branch.outputs.BRANCH_NAME == 'master'
        id: create_release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ fromJson(env.METADATA_JSON).elements[0].versionName }}
          prerelease: false
          title: Deeplink Rboard ${{ fromJson(env.METADATA_JSON).elements[0].versionName }}
          files: |
            app/build/outputs/apk/release/app-release.apk
            app/build/outputs/apk/release/output-metadata.json

      - name: Create new Release
        if: steps.extract_branch.outputs.BRANCH_NAME == 'master'
        id: create_latest_release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: latest
          prerelease: false
          title: Deeplink Rboard ${{ fromJson(env.METADATA_JSON).elements[0].versionName }}
          files: |
            app/build/outputs/apk/release/app-release.apk
            app/build/outputs/apk/release/output-metadata.json

    
  buildDevelop:
    name: Build Ci APK from Develop
    if: startsWith(github.ref, 'refs/heads/develop')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          submodules: recursive

      - uses: nttld/setup-ndk@v1.2.0
        with:
          ndk-version: r25b

      - name: Get Commit Message
        id: commitMessage
        run: IN="${{ github.event.head_commit.message }}" && echo "message=${IN%%$'\n'*}" >> $GITHUB_OUTPUT

      - name: Setup JDK
        uses: actions/setup-java@v3.6.0
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Gradle dependencies
        uses: actions/cache@v3.0.11
        if: ${{ false }}
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Cache build cache
        uses: actions/cache@v3.0.11
        with:
          path: |
            ${{ github.workspace }}/.ccache
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-build-cache-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-cache-

      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: File Permissions
        run: chmod +x gradlew

      - name: Accept Preview SDK License
        run: echo -n -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > /usr/local/lib/android/sdk/licenses/android-sdk-preview-license

      - name: Build apk
        id: buildAllApks
        uses: gradle/gradle-build-action@v2.3.3
        with:
          gradle-version: wrapper
          arguments: assembleDebug

      - name: Get JSON
        id: metadataJson
        run: |
          echo 'METADATA_JSON<<EOF' >> $GITHUB_ENV
          cat app/build/outputs/apk/debug/output-metadata.json >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV


      - name: Sign artifact
        id: signArtifact
        uses: ilharp/sign-android-release@v1.0.4
        with:
          releaseDir: app/build/outputs/apk/debug
          keyAlias: ${{ secrets.KEYALIAS }}
          signingKey: ${{ secrets.SIGNING_KEY }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          buildToolsVersion: 33.0.1

      - name: Rename APK
        run: mv app/build/outputs/apk/debug/app-debug-signed.apk app/build/outputs/apk/debug/app-debug.apk

      - name: Upload Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: Debug Artifact
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Logs
        run: |
          echo ${{ steps.metadataJson.outputs.json }}

      - name: Create new Release
        if: steps.extract_branch.outputs.BRANCH_NAME == 'develop'
        id: create_release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ fromJson(env.METADATA_JSON).elements[0].versionName }}-debug
          prerelease: true
          title: Deeplink Rboard ${{ fromJson(env.METADATA_JSON).elements[0].versionName }}
          files: |
            app/build/outputs/apk/debug/app-debug.apk
            app/build/outputs/apk/debug/output-metadata.json

      - name: Create new Release
        if: steps.extract_branch.outputs.BRANCH_NAME == 'develop'
        id: create_latest_release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: latest-debug
          prerelease: true
          title: Deeplink Rboard ${{ fromJson(env.METADATA_JSON).elements[0].versionName }}
          files: |
            app/build/outputs/apk/debug/app-debug.apk
            app/build/outputs/apk/debug/output-metadata.json
